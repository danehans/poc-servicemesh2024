# Pass load-testing.sh script to the Pod using ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: load-testing-script
  namespace: default
data:
  load-testing.sh: "#!/usr/bin/env bash\n#\n# Run oha commands on specified hosts and upload results to s3 bucket\n#magic___^_^___line\n# Safe scripting\nset -euo pipefail\n#magic___^_^___line\n# List of vars\n#\n#CLUSTER_NAME=\n#STARTING_POINT=\n#BOOKINFO_URL=\nPREFIX=http://\n# Bookinfo\n## Warm Up\nWARM_UP_CONCURRENT_CONNECTIONS_ARRAY=(32 32 32)\nWARM_UP_BOOKINFO_REQUESTS=10000\n## Tests\nCONCURRENT_CONNECTIONS_ARRAY=(32 64 128)\nBOOKINFO_REQUESTS=300000\n# AWS\n#AWS_ACCESS_KEY_ID=\n#AWS_SECRET_ACCESS_KEY=\nBUCKET_NAME=service-mesh-poc\nREGION=eu-west-2\nFOLDER_NAME=$CLUSTER_NAME-$STARTING_POINT\n#magic___^_^___line\n# Define functions\ninstall-aws(){\n  # Install aws cli\n  apt-get update\n  apt-get install -y curl\n  apt-get install -y unzip\n  echo \"Installing AWS CLI...\"\n  curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\"\n  unzip awscliv2.zip\n  ./aws/install\n  #magic___^_^___line\n  aws --version\n  #magic___^_^___line\n  # Add aws credentials\n  echo \"Adding AWS credentials...\"\n  mkdir ~/.aws\n  echo \"[default]\n  aws_access_key_id = ${AWS_ACCESS_KEY_ID}\n  aws_secret_access_key = ${AWS_SECRET_ACCESS_KEY}\n  region = ${REGION}\" > ~/.aws/config \n}\n  #magic___^_^___line\ninstall-oha(){\n  # Install oha\n  echo \"Installing oha CLI...\"\n  curl -L https://github.com/hatoo/oha/releases/download/v1.4.1/oha-linux-amd64 -o oha\n  chmod +x ./oha\n  mv ./oha /usr/local/bin/oha\n  #magic___^_^___line\n  oha --version\n}\n  #magic___^_^___line\nfolder(){\n  # Create a folder for test results\n  echo \"Creating folder for test results...\"\n  mkdir \"$FOLDER_NAME\"\n}\n  #magic___^_^___line\nrun-tests(){\n  # Run tests and save output to the file\n  echo \"Running tests...\"\n  echo \"Configuration: Number of requests: ${REQUESTS}, Number of connections: ${CONCURRENT_CONNECTIONS}, URL: ${PREFIX}${URL}\"\n  APP_NAME=\"${URL%%:*}\"\n  FILE_NAME=\"test-$APP_NAME-$CONCURRENT_CONNECTIONS-$REQUESTS.txt\"\n  echo \"Started at $(date \"+%Y-%m-%d-%H-%M\")\" 2>&1 | tee \"$FOLDER_NAME/$FILE_NAME\"\n  oha \"$PREFIX$URL\" -c \"$CONCURRENT_CONNECTIONS\" -n \"$REQUESTS\" --disable-keepalive --disable-compression --insecure --ipv4 --no-tui >> \"$FOLDER_NAME/$FILE_NAME\"\n  echo \"Finished at $(date \"+%Y-%m-%d-%H-%M\")\" 2>&1 | tee -a \"$FOLDER_NAME/$FILE_NAME\"\n  cat \"$FOLDER_NAME/$FILE_NAME\"\n}\n  #magic___^_^___line\n  #magic___^_^___line\n  #magic___^_^___line\nupload-files(){\n# Upload files to the bucket\n  aws s3 cp ./\"$FOLDER_NAME\" s3://\"$BUCKET_NAME\"/\"$FOLDER_NAME\" --recursive\n}\n  #magic___^_^___line\ninstall-aws\ninstall-oha\nfolder\n# Warm Up Bookinfo\nfor c in \"${WARM_UP_CONCURRENT_CONNECTIONS_ARRAY[@]}\"\ndo\n    CONCURRENT_CONNECTIONS=$c\n    REQUESTS=$WARM_UP_BOOKINFO_REQUESTS\n    URL=$BOOKINFO_URL\n    run-tests\ndone\n# Run tests against Bookinfo\nfor c in \"${CONCURRENT_CONNECTIONS_ARRAY[@]}\"\ndo\n    CONCURRENT_CONNECTIONS=$c\n    REQUESTS=$BOOKINFO_REQUESTS\n    URL=$BOOKINFO_URL\n    run-tests\ndone\n    #magic___^_^___line\nupload-files\n"
